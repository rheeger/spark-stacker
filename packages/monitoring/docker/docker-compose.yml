version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - monitoring
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ../dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/dashboards/home.json
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml
      - loki_data:/loki
      - loki_wal:/wal
    restart: unless-stopped
    ports:
      - "3100:3100"
    networks:
      - monitoring
    # Use root user temporarily to create directories with proper permissions
    user: "0"
    # Add an entrypoint script to initialize directories
    entrypoint:
      - sh
      - -c
      - |
        mkdir -p /loki/chunks /loki/boltdb-shipper-active /loki/boltdb-shipper-cache /loki/compactor /wal
        chown -R 10001:10001 /loki /wal
        chmod -R 755 /loki /wal
        # Run Loki directly as root, but the files have proper permissions now
        exec /usr/bin/loki -config.file=/etc/loki/loki-config.yml
    env_file:
      - ./loki/loki.env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/log:/var/log
      - ../../../../logs:/logs
    command: -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped
    depends_on:
      - loki
    networks:
      - monitoring
    extra_hosts:
      - "host.docker.internal:host-gateway"

  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitoring
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    ports:
      - "8090:8080"
    networks:
      - monitoring
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mock-metrics:
    image: python:3.9-slim
    container_name: mock-metrics
    volumes:
      - ../exporters:/app
    command: >
      bash -c "pip install prometheus_client &&
              ls -la /app &&
              python /app/mock-metrics.py"
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  loki_wal:
